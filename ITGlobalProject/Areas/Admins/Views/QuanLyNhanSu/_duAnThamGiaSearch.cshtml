@using ITGlobalProject.Models
@{
    IEnumerable<Projects> lstPro = Session["lst-duanthamgia-detailemployee"] as IEnumerable<Projects>;
}

<div id="ContentSearchAppend" class="row">
    @if (lstPro.Count() > 0)
    {
        foreach (var item in lstPro)
        {
            <div class="col-xxl-4 col-xl-4 col-lg-6 col-12 mb-4">
                <!-- card -->
                <div class="card h-100">
                    <!-- card body -->
                    <div class="card-body">
                        <!-- heading-->
                        <div class="d-flex align-items-center
                                justify-content-between">
                            <div>
                                <h4 class="mb-0"><a href="#" class="text-inherit">@item.Name</a></h4>
                                <span class="text-muted fs-6">@item.Tasks.Count() Công việc</span>

                            </div>

                        </div>
                        <!-- para-->
                        <div class="mt-3 mb-4">
                            <p class="mb-0">
                                @item.Description
                            </p>
                        </div>
                        <!-- progress -->
                        <div class="d-flex justify-content-between
                                align-items-center mb-5">
                            <div class="d-flex align-items-center">
                                <!-- avatar group -->
                                <div class="avatar-group">
                                    @if (item.Teams.Count == 0)
                                    {
                                        <span>Chưa Lập</span>
                                    }
                                    //Đội ngũ ít hơn 4 người
                                    else if (item.Teams.Count <= 3)
                                    {
                                        foreach (var iteam in item.Teams)
                                        {
                                            if (string.IsNullOrEmpty(iteam.Employees.Avatar))
                                            {
                                                <span class="avatar avatar-md avatar-primary imgtooltip" data-template="@iteam.Employees.ID">
                                                    <span class="avatar-initials rounded-circle ">
                                                        @iteam.Employees.Name.Substring(0, 1).ToUpper()
                                                    </span>
                                                    <span id="@iteam.Employees.ID" class="d-none">
                                                        <span class="mb-0 h6">@iteam.Employees.Name</span>

                                                    </span>
                                                </span>
                                            }
                                            else
                                            {
                                                <span class="avatar avatar-md">
                                                    <img alt="avatar" src="@iteam.Employees.Avatar"
                                                         class="rounded-circle imgtooltip" data-template="@iteam.Employees.ID">

                                                    <span id="@iteam.Employees.ID" class="d-none">
                                                        <span class="mb-0 h6">@iteam.Employees.Name</span>
                                                    </span>
                                                </span>
                                            }
                                        }
                                    }
                                    //Đội ngũ nhiều hơn 3 người
                                    else
                                    {
                                        for (int t = 0; t < 3; t++)
                                        {
                                            if (string.IsNullOrEmpty(item.Teams.ToList()[t].Employees.Avatar))
                                            {
                                                <span class="avatar avatar-md avatar-primary imgtooltip" data-template="@item.Teams.ToList()[t].Employees.ID">
                                                    <span class="avatar-initials rounded-circle ">
                                                        @item.Teams.ToList()[t].Employees.Name.Substring(0, 1).ToUpper()
                                                    </span>
                                                    <span id="@item.Teams.ToList()[t].Employees.ID" class="d-none">
                                                        <span class="mb-0 h6">@item.Teams.ToList()[t].Employees.Name</span>

                                                    </span>
                                                </span>
                                            }
                                            else
                                            {
                                                <span class="avatar avatar-md">
                                                    <img alt="avatar" src="@item.Teams.ToList()[t].Employees.Avatar"
                                                         class="rounded-circle imgtooltip" data-template="@item.Teams.ToList()[t].Employees.ID">

                                                    <span id="@item.Teams.ToList()[t].Employees.ID" class="d-none">
                                                        <span class="mb-0 h6">@item.Teams.ToList()[t].Employees.Name</span>
                                                    </span>
                                                </span>
                                            }
                                        }
                                        <span class="avatar avatar-md">
                                            <span class="avatar-initials rounded-circle bg-light text-dark">@(item.Teams.Count - 3)+</span>
                                        </span>
                                    }
                                </div>
                            </div>
                            <!-- text -->
                            <div>
                                @if (item.Tasks.ToList().Count < 1
                                                       && (item.EndDate.AddDays(1) - DateTime.Now).TotalDays >= 0)
                                {
                                    <span style="width: 100px" class="badge bg-light-primary text-dark-primary">Đang thực hiện</span>
                                }
                                //Chưa giao việc, quá hạn => đã quá hạn
                                else if (item.Tasks.ToList().Count < 1
                                    && (item.EndDate.AddDays(1) - DateTime.Now).TotalDays < 0)
                                {
                                    <span style="width: 100px" class="badge bg-light-danger text-dark-danger">Đã quá hạn</span>
                                }
                                //Còn hạn và còn việc => đang thực hiện
                                else if (item.Tasks.ToList().Count > 1
                                    && (item.Tasks.Where(t => t.State.Equals("done")).Sum(t => t.OriginalEstimate) / item.Tasks.Sum(t => t.OriginalEstimate)) * 100 < 100
                                    && (item.EndDate.AddDays(1) - DateTime.Now).TotalDays >= 0)
                                {
                                    <span style="width: 100px" class="badge bg-light-primary text-dark-primary">Đang thực hiện</span>
                                }
                                //Qúa hạn, còn việc hoặc chưa thanh toán xong => đã quá hạn
                                else if ((item.EndDate.AddDays(1) - DateTime.Now).TotalDays < 0
                                    && (item.Tasks.Where(t => t.State.Equals("done")).Sum(t => t.OriginalEstimate) / item.Tasks.Sum(t => t.OriginalEstimate)) * 100 < 100
                                    || item.Debts.Where(d => d.State == true).ToList().Count < item.Debts.Count)
                                {
                                    <span style="width: 100px" class="badge bg-light-danger text-dark-danger">Đã quá hạn</span>
                                }
                                //hết việc, chưa thanh toán xong => chờ thanh toán
                                else if ((item.Tasks.Where(t => t.State.Equals("done")).Sum(t => t.OriginalEstimate) / item.Tasks.Sum(t => t.OriginalEstimate)) * 100 >= 100
                                    && item.Debts.Where(d => d.State == true).ToList().Count < item.Debts.Count)
                                {
                                    <span style="width: 100px" class="badge bg-light-warning text-dark-warning">Chờ thanh toán</span>
                                }
                                //hết việc, đã thanh toán xong => done
                                else if ((item.Tasks.Where(t => t.State.Equals("done")).Sum(t => t.OriginalEstimate) / item.Tasks.Sum(t => t.OriginalEstimate)) * 100 == 100
                                    && item.Debts.Where(d => d.State == true).ToList().Count < item.Debts.Count)
                                {
                                    <span style="width: 100px" class="badge bg-light-success text-dark-success">done</span>
                                }
                            </div>
                        </div>
                        <div>
                            <!--Chưa giao việc, còn hạn => đang thực hiện-->
                            @if (item.Tasks.ToList().Count < 1
                    && (item.EndDate.AddDays(1) - DateTime.Now).TotalDays >= 0)
                            {
                                <div class="progress progress-tooltip" style="height: 6px;">
                                    <div class="progress-bar bg-primary " role="progressbar" style="width: @((item.Tasks.Where(t => t.State.Equals("done")).Sum(t => t.OriginalEstimate) / item.Tasks.Sum(t => t.OriginalEstimate)) * 100)%;"
                                         aria-valuenow="@((item.Tasks.Where(t => t.State.Equals("done")).Sum(t => t.OriginalEstimate) / item.Tasks.Sum(t => t.OriginalEstimate)) * 100)"
                                         aria-valuemin="0" aria-valuemax="100">
                                        <span>@((item.Tasks.Where(t => t.State.Equals("done")).Sum(t => t.OriginalEstimate) / item.Tasks.Sum(t => t.OriginalEstimate)) * 100)%</span>
                                    </div>
                                </div>
                            }
                            //Chưa giao việc, quá hạn => đã quá hạn
                            else if (item.Tasks.ToList().Count < 1
                                && (item.EndDate.AddDays(1) - DateTime.Now).TotalDays < 0)
                            {
                                <div class="progress progress-tooltip" style="height: 6px;">
                                    <div class="progress-bar bg-danger " role="progressbar" style="width: @((item.Tasks.Where(t => t.State.Equals("done")).Sum(t => t.OriginalEstimate) / item.Tasks.Sum(t => t.OriginalEstimate)) * 100)%;"
                                         aria-valuenow="@((item.Tasks.Where(t => t.State.Equals("done")).Sum(t => t.OriginalEstimate) / item.Tasks.Sum(t => t.OriginalEstimate)) * 100)"
                                         aria-valuemin="0" aria-valuemax="100">
                                        <span>@((item.Tasks.Where(t => t.State.Equals("done")).Sum(t => t.OriginalEstimate) / item.Tasks.Sum(t => t.OriginalEstimate)) * 100)%</span>
                                    </div>
                                </div>
                            }
                            //Còn hạn và còn việc => đang thực hiện
                            else if (item.Tasks.ToList().Count > 1
                                && (item.Tasks.Where(t => t.State.Equals("done")).Sum(t => t.OriginalEstimate) / item.Tasks.Sum(t => t.OriginalEstimate)) * 100 < 100
                                && (item.EndDate.AddDays(1) - DateTime.Now).TotalDays >= 0)
                            {
                                <div class="progress progress-tooltip" style="height: 6px;">
                                    <div class="progress-bar bg-primary " role="progressbar" style="width: @((item.Tasks.Where(t => t.State.Equals("done")).Sum(t => t.OriginalEstimate) / item.Tasks.Sum(t => t.OriginalEstimate)) * 100)%;"
                                         aria-valuenow="@((item.Tasks.Where(t => t.State.Equals("done")).Sum(t => t.OriginalEstimate) / item.Tasks.Sum(t => t.OriginalEstimate)) * 100)"
                                         aria-valuemin="0" aria-valuemax="100">
                                        <span>@((item.Tasks.Where(t => t.State.Equals("done")).Sum(t => t.OriginalEstimate) / item.Tasks.Sum(t => t.OriginalEstimate)) * 100)%</span>
                                    </div>
                                </div>
                            }
                            //Qúa hạn, còn việc hoặc chưa thanh toán xong => đã quá hạn
                            else if ((item.EndDate.AddDays(1) - DateTime.Now).TotalDays < 0
                                && (item.Tasks.Where(t => t.State.Equals("done")).Sum(t => t.OriginalEstimate) / item.Tasks.Sum(t => t.OriginalEstimate)) * 100 < 100
                                || item.Debts.Where(d => d.State == true).ToList().Count < item.Debts.Count)
                            {
                                <div class="progress progress-tooltip" style="height: 6px;">
                                    <div class="progress-bar bg-danger " role="progressbar" style="width: @((item.Tasks.Where(t => t.State.Equals("done")).Sum(t => t.OriginalEstimate) / item.Tasks.Sum(t => t.OriginalEstimate)) * 100)%;"
                                         aria-valuenow="@((item.Tasks.Where(t => t.State.Equals("done")).Sum(t => t.OriginalEstimate) / item.Tasks.Sum(t => t.OriginalEstimate)) * 100)"
                                         aria-valuemin="0" aria-valuemax="100">
                                        <span>@((item.Tasks.Where(t => t.State.Equals("done")).Sum(t => t.OriginalEstimate) / item.Tasks.Sum(t => t.OriginalEstimate)) * 100)%</span>
                                    </div>
                                </div>

                            }
                            //hết việc, chưa thanh toán xong => chờ thanh toán
                            else if ((item.Tasks.Where(t => t.State.Equals("done")).Sum(t => t.OriginalEstimate) / item.Tasks.Sum(t => t.OriginalEstimate)) * 100 >= 100
                                && item.Debts.Where(d => d.State == true).ToList().Count < item.Debts.Count)
                            {

                                <div class="progress progress-tooltip" style="height: 6px;">
                                    <div class="progress-bar bg-danger " role="progressbar" style="width: @((item.Tasks.Where(t => t.State.Equals("done")).Sum(t => t.OriginalEstimate) / item.Tasks.Sum(t => t.OriginalEstimate)) * 100)%;"
                                         aria-valuenow="@((item.Tasks.Where(t => t.State.Equals("done")).Sum(t => t.OriginalEstimate) / item.Tasks.Sum(t => t.OriginalEstimate)) * 100)"
                                         aria-valuemin="0" aria-valuemax="100">
                                        <span>@((item.Tasks.Where(t => t.State.Equals("done")).Sum(t => t.OriginalEstimate) / item.Tasks.Sum(t => t.OriginalEstimate)) * 100)%</span>
                                    </div>
                                </div>
                            }
                            //hết việc, đã thanh toán xong => done
                            else if ((item.Tasks.Where(t => t.State.Equals("done")).Sum(t => t.OriginalEstimate) / item.Tasks.Sum(t => t.OriginalEstimate)) * 100 == 100
                                && item.Debts.Where(d => d.State == true).ToList().Count < item.Debts.Count)
                            {

                                <div class="progress progress-tooltip" style="height: 6px;">
                                    <div class="progress-bar bg-success " role="progressbar" style="width: @((item.Tasks.Where(t => t.State.Equals("done")).Sum(t => t.OriginalEstimate) / item.Tasks.Sum(t => t.OriginalEstimate)) * 100)%;"
                                         aria-valuenow="@((item.Tasks.Where(t => t.State.Equals("done")).Sum(t => t.OriginalEstimate) / item.Tasks.Sum(t => t.OriginalEstimate)) * 100)"
                                         aria-valuemin="0" aria-valuemax="100">
                                        <span>@((item.Tasks.Where(t => t.State.Equals("done")).Sum(t => t.OriginalEstimate) / item.Tasks.Sum(t => t.OriginalEstimate)) * 100)%</span>
                                    </div>
                                </div>
                            }

                        </div>
                    </div>
                    <!-- card footer -->
                    <div class="card-footer bg-white p-0">
                        <div class="d-flex justify-content-between ">
                            <div class="w-50 py-3 px-4 ">
                                <h6 class="mb-0 text-muted">Hạn Chót:</h6>
                                <p class="text-dark fs-6 fw-semi-bold mb-0">@item.EndDate.ToString("dd") Thg @item.EndDate.ToString("MM, yyyy")</p>
                            </div>
                            <div class="border-start w-50 py-3 px-4">
                                <h6 class="mb-0 text-muted">Chi Phí:</h6>
                                <p class="text-dark fs-6 fw-semi-bold mb-0">@item.Debts.ToList().Sum(d => d.Price).ToString("0,0").Replace(".", ",") đ</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    }
    else
    {
        <div class="mb-3 col-12 col-md-12 text-center">
            <span>Không tìm thấy dữ liệu tương ứng.</span>
        </div>
    }
</div>
