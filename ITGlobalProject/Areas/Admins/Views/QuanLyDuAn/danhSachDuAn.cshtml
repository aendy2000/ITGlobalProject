@model IEnumerable<ITGlobalProject.Models.Projects>
@{
    ViewBag.Title = "Quản Lý Dự Án";
    Layout = "~/Areas/Admins/Views/Shared/_AdminLayout.cshtml";
    int i = 0;
}

<div class="container-fluid p-4">
    <div class="row ">
        <div class="col-lg-12 col-md-12 col-12">
            <!-- Page header -->
            <div class="border-bottom pb-4 mb-4 d-md-flex align-items-center justify-content-between">
                <div class="mb-2 mb-lg-0">
                    <h1 class="mb-0 h2 fw-bold">Quản Lý Dự Án </h1>
                    <!-- Breadcrumb -->
                    <nav aria-label="breadcrumb">
                        <ol class="breadcrumb">
                            <li class="breadcrumb-item">
                                <a href="@Url.Action("Overview", "Dashboard")">Trang Chủ</a>
                            </li>
                            <li class="breadcrumb-item">
                                <a href="@Url.Action("danhSachDuAn", "QuanLyDuAn")">Quản Lý Dự Án</a>
                            </li>
                            <li class="breadcrumb-item active" aria-current="page">
                                Danh Sách Dự Án
                            </li>
                        </ol>
                    </nav>
                </div>
                <!-- button -->
                <div>
                    <a href="@Url.Action("taoDuAnMoi", "QuanLyDuAn")" class="btn btn-primary me-2" style="width:230px" type="button">
                        <i class="fe fe-book"> </i> Thêm Dự Án Mới
                    </a>
                </div>
            </div>

        </div>
    </div>
    <!-- row -->
    <div class="row">
        <!-- col -->
        <div class="col-md-12 col-12 mb-5">
            <!-- card -->
            <div class="card">
                <!-- table -->
                <table id="dataTableBasic" class="table" style="width:100%">
                    <thead class="table-light">
                        <tr>
                            <th hidden></th>
                            <th scope="col" class=" border-top-0">Tên dự án</th>
                            <th scope="col" class=" border-top-0">Bàn giao</th>
                            <th scope="col" class=" border-top-0">Ngân sách</th>
                            <th scope="col" class=" border-top-0">Hoàn thành</th>
                            <th scope="col" class=" border-top-0">Trạng thái</th>
                            <th scope="col" class=" border-top-0">Đội ngũ</th>
                            <th scope="col" class=" border-top-0"></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            i++;
                            <tr>
                                <td hidden>@i</td>
                                <td class="align-middle ">
                                    <div class="d-flex align-items-center">
                                        <div class="icon-shape icon-lg rounded-3 border p-4">
                                            @i
                                        </div>
                                        <div class="ms-3">
                                            <h4 class="mb-0"><a href="@Url.Action("chiTietDuAn", "QuanLyDuAn", new {id = item.ID})" class="text-inherit">@item.Name</a></h4>
                                        </div>
                                    </div>
                                </td>
                                <td class="align-middle text-nowrap">
                                    @item.EndDate.ToString("dd") Thg @item.EndDate.ToString("MM, yyyy")
                                </td>
                                <td style="font-weight: bold; color: brown " class="align-middle ">
                                    @item.Debts.Sum(d => d.Price).ToString("0,0").Replace(".", ",")
                                </td>

                                <td class="align-middle ">
                                    <!--Chưa giao việc, còn hạn => đang thực hiện-->
                                    @if (item.Tasks.ToList().Count < 1
                                        && item.EndDate.AddDays(1).CompareTo(DateTime.Now) >= 0)
                                    {
                                        <div class="d-flex align-items-center">
                                            <div class="me-2"> <span>0%</span></div>
                                            <div class="progress flex-auto" style="height: 6px;">
                                                <div class="progress-bar bg-primary " role="progressbar" style="width: 0%;"
                                                     aria-valuenow="0" aria-valuemin="0" aria-valuemax="100">
                                                </div>
                                            </div>
                                        </div>
                                    }
                                    //Chưa giao việc, quá hạn => đã quá hạn
                                    else if (item.Tasks.ToList().Count < 1
                                        && item.EndDate.AddDays(1).CompareTo(DateTime.Now) < 0)
                                    {
                                        <div class="d-flex align-items-center">
                                            <div class="me-2"> <span>0%</span></div>
                                            <div class="progress flex-auto" style="height: 6px;">
                                                <div class="progress-bar bg-danger " role="progressbar" style="width: 0%;"
                                                     aria-valuenow="0" aria-valuemin="0" aria-valuemax="100">
                                                </div>
                                            </div>
                                        </div>
                                    }
                                    //Còn hạn và còn việc => đang thực hiện
                                    else if (item.Tasks.ToList().Count > 1
                                        && (item.Tasks.Where(t => !t.State.Equals("done")).Sum(t => t.OriginalEstimate) / item.Tasks.Sum(t => t.OriginalEstimate)) * 100 < 100
                                        && item.EndDate.AddDays(1).CompareTo(DateTime.Now) >= 0)
                                    {
                                        <div class="d-flex align-items-center">
                                            <div class="me-2"><span>@((item.Tasks.Where(t => !t.State.Equals("done")).Sum(t => t.OriginalEstimate) / item.Tasks.Sum(t => t.OriginalEstimate)) * 100)%</span></div>
                                            <div class="progress flex-auto" style="height: 6px;">
                                                <div class="progress-bar bg-primary " role="progressbar" style="width: @((item.Tasks.Where(t => !t.State.Equals("done")).Sum(t => t.OriginalEstimate) / item.Tasks.Sum(t => t.OriginalEstimate)) * 100)%;"
                                                     aria-valuenow="@((item.Tasks.Where(t => !t.State.Equals("done")).Sum(t => t.OriginalEstimate) / item.Tasks.Sum(t => t.OriginalEstimate)) * 100)" aria-valuemin="0" aria-valuemax="100">
                                                </div>
                                            </div>
                                        </div>
                                    }
                                    //Qúa hạn, còn việc hoặc chưa thanh toán xong => đã quá hạn
                                    else if (item.EndDate.AddDays(1).CompareTo(DateTime.Now) < 0
                                        && (item.Tasks.Where(t => !t.State.Equals("done")).Sum(t => t.OriginalEstimate) / item.Tasks.Sum(t => t.OriginalEstimate)) * 100 < 100
                                        || item.Debts.Where(d => d.State == true).ToList().Count < item.Debts.Count)
                                    {
                                        <div class="d-flex align-items-center">
                                            <div class="me-2"><span>@((item.Tasks.Where(t => !t.State.Equals("done")).Sum(t => t.OriginalEstimate) / item.Tasks.Sum(t => t.OriginalEstimate)) * 100)%</span></div>
                                            <div class="progress flex-auto" style="height: 6px;">
                                                <div class="progress-bar bg-danger " role="progressbar" style="width: @((item.Tasks.Where(t => !t.State.Equals("done")).Sum(t => t.OriginalEstimate) / item.Tasks.Sum(t => t.OriginalEstimate)) * 100)%;"
                                                     aria-valuenow="@((item.Tasks.Where(t => !t.State.Equals("done")).Sum(t => t.OriginalEstimate) / item.Tasks.Sum(t => t.OriginalEstimate)) * 100)" aria-valuemin="0" aria-valuemax="100">
                                                </div>
                                            </div>
                                        </div>
                                    }
                                    //hết việc, chưa thanh toán xong => chờ thanh toán
                                    else if ((item.Tasks.Where(t => !t.State.Equals("done")).Sum(t => t.OriginalEstimate) / item.Tasks.Sum(t => t.OriginalEstimate)) * 100 >= 100
                                        && item.Debts.Where(d => d.State == true).ToList().Count < item.Debts.Count)
                                    {
                                        <div class="d-flex align-items-center">
                                            <div class="me-2"><span>@((item.Tasks.Where(t => !t.State.Equals("done")).Sum(t => t.OriginalEstimate) / item.Tasks.Sum(t => t.OriginalEstimate)) * 100)%</span></div>
                                            <div class="progress flex-auto" style="height: 6px;">
                                                <div class="progress-bar bg-danger " role="progressbar" style="width: @((item.Tasks.Where(t => !t.State.Equals("done")).Sum(t => t.OriginalEstimate) / item.Tasks.Sum(t => t.OriginalEstimate)) * 100)%;"
                                                     aria-valuenow="@((item.Tasks.Where(t => !t.State.Equals("done")).Sum(t => t.OriginalEstimate) / item.Tasks.Sum(t => t.OriginalEstimate)) * 100)" aria-valuemin="0" aria-valuemax="100">
                                                </div>
                                            </div>
                                        </div>
                                    }
                                    //hết việc, đã thanh toán xong => done
                                    else if ((item.Tasks.Where(t => !t.State.Equals("done")).Sum(t => t.OriginalEstimate) / item.Tasks.Sum(t => t.OriginalEstimate)) * 100 == 100
                                        && item.Debts.Where(d => d.State == true).ToList().Count < item.Debts.Count)
                                    {
                                        <div class="d-flex align-items-center">
                                            <div class="me-2"><span>@((item.Tasks.Where(t => !t.State.Equals("done")).Sum(t => t.OriginalEstimate) / item.Tasks.Sum(t => t.OriginalEstimate)) * 100)%</span></div>
                                            <div class="progress flex-auto" style="height: 6px;">
                                                <div class="progress-bar bg-success " role="progressbar" style="width: @((item.Tasks.Where(t => !t.State.Equals("done")).Sum(t => t.OriginalEstimate) / item.Tasks.Sum(t => t.OriginalEstimate)) * 100)%;"
                                                     aria-valuenow="@((item.Tasks.Where(t => !t.State.Equals("done")).Sum(t => t.OriginalEstimate) / item.Tasks.Sum(t => t.OriginalEstimate)) * 100)" aria-valuemin="0" aria-valuemax="100">
                                                </div>
                                            </div>
                                        </div>
                                    }
                                </td>
                                <td class="align-middle ">
                                    <!--Chưa giao việc, còn hạn => đang thực hiện-->
                                    @if (item.Tasks.ToList().Count < 1
                                        && item.EndDate.AddDays(1).CompareTo(DateTime.Now) >= 0)
                                    {
                                        <span style="width: 100px" class="badge bg-light-primary text-dark-primary">Đang thực hiện</span>
                                    }
                                    //Chưa giao việc, quá hạn => đã quá hạn
                                    else if (item.Tasks.ToList().Count < 1
                                        && item.EndDate.AddDays(1).CompareTo(DateTime.Now) < 0)
                                    {
                                        <span style="width: 100px" class="badge bg-light-danger text-dark-danger">Đã quá hạn</span>
                                    }
                                    //Còn hạn và còn việc => đang thực hiện
                                    else if (item.Tasks.ToList().Count > 1
                                        && (item.Tasks.Where(t => !t.State.Equals("done")).Sum(t => t.OriginalEstimate) / item.Tasks.Sum(t => t.OriginalEstimate)) * 100 < 100
                                        && item.EndDate.AddDays(1).CompareTo(DateTime.Now) >= 0)
                                    {
                                        <span style="width: 100px" class="badge bg-light-primary text-dark-primary">Đang thực hiện</span>
                                    }
                                    //Qúa hạn, còn việc hoặc chưa thanh toán xong => đã quá hạn
                                    else if (item.EndDate.AddDays(1).CompareTo(DateTime.Now) < 0
                                        && (item.Tasks.Where(t => !t.State.Equals("done")).Sum(t => t.OriginalEstimate) / item.Tasks.Sum(t => t.OriginalEstimate)) * 100 < 100
                                        || item.Debts.Where(d => d.State == true).ToList().Count < item.Debts.Count)
                                    {
                                        <span style="width: 100px" class="badge bg-light-danger text-dark-danger">Đã quá hạn</span>
                                    }
                                    //hết việc, chưa thanh toán xong => chờ thanh toán
                                    else if ((item.Tasks.Where(t => !t.State.Equals("done")).Sum(t => t.OriginalEstimate) / item.Tasks.Sum(t => t.OriginalEstimate)) * 100 >= 100
                                        && item.Debts.Where(d => d.State == true).ToList().Count < item.Debts.Count)
                                    {
                                        <span style="width: 100px" class="badge bg-light-warning text-dark-warning">Chờ thanh toán</span>
                                    }
                                    //hết việc, đã thanh toán xong => done
                                    else if ((item.Tasks.Where(t => !t.State.Equals("done")).Sum(t => t.OriginalEstimate) / item.Tasks.Sum(t => t.OriginalEstimate)) * 100 == 100
                                        && item.Debts.Where(d => d.State == true).ToList().Count < item.Debts.Count)
                                    {
                                        <span style="width: 100px" class="badge bg-light-success text-dark-success">done</span>
                                    }
                                </td>
                                <td class="align-middle ">
                                    <div class="avatar-group">
                                        <!-- Chưa có đội ngũ-->
                                        @if (item.Teams.Count == 0)
                                        {
                                            <span>Chưa Lập</span>
                                        }
                                        //Đội ngũ ít hơn 4 người
                                        else if (item.Teams.Count <= 3)
                                        {
                                            foreach (var iteam in item.Teams)
                                            {
                                                if (string.IsNullOrEmpty(iteam.Employees.Avatar))
                                                {
                                                    <span class="avatar avatar-md avatar-primary imgtooltip" data-template="@iteam.Employees.ID">
                                                        <span class="avatar-initials rounded-circle ">
                                                            @iteam.Employees.Name.Substring(0, 1).ToUpper()
                                                        </span>
                                                        <span id="@iteam.Employees.ID" class="d-none">
                                                            <span class="mb-0 h6">@iteam.Employees.Name</span>

                                                        </span>
                                                    </span>
                                                }
                                                else
                                                {
                                                    <span class="avatar avatar-md">
                                                        <img alt="avatar" src="@iteam.Employees.Avatar"
                                                             class="rounded-circle imgtooltip" data-template="@iteam.Employees.ID">

                                                        <span id="@iteam.Employees.ID" class="d-none">
                                                            <span class="mb-0 h6">@iteam.Employees.Name</span>
                                                        </span>
                                                    </span>
                                                }
                                            }
                                        }
                                        //Đội ngũ nhiều hơn 3 người
                                        else
                                        {
                                            for (int t = 0; t < 4; t++)
                                            {
                                                if (string.IsNullOrEmpty(item.Teams.ToList()[t].Employees.Avatar))
                                                {
                                                    <span class="avatar avatar-md avatar-primary imgtooltip" data-template="@item.Teams.ToList()[t].Employees.ID">
                                                        <span class="avatar-initials rounded-circle ">
                                                            @item.Teams.ToList()[t].Employees.Name.Substring(0, 1).ToUpper()
                                                        </span>
                                                        <span id="@item.Teams.ToList()[t].Employees.ID" class="d-none">
                                                            <span class="mb-0 h6">@item.Teams.ToList()[t].Employees.Name</span>

                                                        </span>
                                                    </span>
                                                }
                                                else
                                                {
                                                    <span class="avatar avatar-md">
                                                        <img alt="avatar" src="@item.Teams.ToList()[t].Employees.Avatar"
                                                             class="rounded-circle imgtooltip" data-template="@item.Teams.ToList()[t].Employees.ID">

                                                        <span id="@item.Teams.ToList()[t].Employees.ID" class="d-none">
                                                            <span class="mb-0 h6">@item.Teams.ToList()[t].Employees.Name</span>
                                                        </span>
                                                    </span>
                                                }
                                            }
                                            <span class="avatar avatar-md ">
                                                <span class="avatar-initials rounded-circle bg-light text-dark">@(item.Teams.Count - 3)+</span>
                                            </span>
                                        }

                                    </div>
                                </td>
                                <td class="text-muted align-middle text-end">
                                    <div class="dropdown dropstart">
                                        <a class="btn-icon btn btn-ghost btn-sm rounded-circle" href="#" role="button" id="Dropdown1"
                                           data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                            <i class="fe fe-more-vertical"></i>
                                        </a>
                                        <div class="dropdown-menu" aria-labelledby="Dropdown1">
                                            <span class="dropdown-header">Hành động</span>
                                            <a class="dropdown-item" href="@Url.Action("chiTietDuAn", "QuanLyDuAn", new {id = item.ID})">
                                                <i class="fe fe-info dropdown-item-icon"></i>Xem chi tiết
                                            </a>
                                            <a class="dropdown-item" href="#">
                                                <i class="fe fe-trash dropdown-item-icon"></i>Xóa dự án
                                            </a>
                                            <div class="dropdown-divider"></div>
                                            <a class="dropdown-item" href="#">
                                                <i class="fe fe-printer dropdown-item-icon"></i>Xuất file Excel
                                            </a>
                                        </div>
                                    </div>
                                </td>
                            </tr>
                        }

                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>


