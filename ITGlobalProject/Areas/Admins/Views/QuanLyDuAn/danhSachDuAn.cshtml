@model IEnumerable<ITGlobalProject.Models.Projects>
@{
    ViewBag.Title = "Quản Lý Dự Án";
    Layout = "~/Areas/Admins/Views/Shared/_AdminLayout.cshtml";
    int i = 0;
}

<div class="container-fluid p-4">
    <div class="row ">
        <div class="col-lg-12 col-md-12 col-12">
            <!-- Page header -->
            <div class="border-bottom pb-4 mb-4 d-md-flex align-items-center justify-content-between">
                <div class="mb-2 mb-lg-0">
                    <h1 class="mb-0 h2 fw-bold">Quản Lý Dự Án </h1>
                    <!-- Breadcrumb -->
                    <nav aria-label="breadcrumb">
                        <ol class="breadcrumb">
                            <li class="breadcrumb-item">
                                <a href="@Url.Action("Overview", "Dashboard")" onclick="$('#AjaxLoader').show();">Trang Chủ</a>
                            </li>
                            <li class="breadcrumb-item">
                                <a href="@Url.Action("danhSachDuAn", "QuanLyDuAn")" onclick="$('#AjaxLoader').show();">Quản Lý Dự Án</a>
                            </li>
                            <li class="breadcrumb-item active" aria-current="page">
                                Danh Sách Dự Án
                            </li>
                        </ol>
                    </nav>
                </div>
                <!-- button -->
                <div>
                    <a href="@Url.Action("taoDuAnMoi", "QuanLyDuAn")" onclick="$('#AjaxLoader').show();" class="btn btn-primary me-2" type="button">
                        Thêm Mới
                    </a>
                </div>
            </div>

        </div>
    </div>
    <!-- row -->
    <div class="row">
        <!-- col -->
        <div class="col-md-12 col-12 mb-5">
            <!-- card -->
            <div class="card">
                <!-- table -->
                <table id="dataTableBasic" class="table table-hover" style="width:100%">
                    <thead class="table-light">
                        <tr>
                            <th hidden></th>
                            <th scope="col" class=" border-top-0">Mã dự án</th>
                            <th scope="col" class=" border-top-0">Tên dự án</th>
                            <th scope="col" class=" border-top-0">Bàn giao</th>
                            <th scope="col" class=" border-top-0">Chi phí</th>
                            <th scope="col" class=" border-top-0">Công việc</th>
                            <th scope="col" class=" border-top-0">Hoàn thành</th>
                            <th scope="col" class=" border-top-0">Trạng thái</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            i++;
                            <tr>
                                <td hidden>@i</td>
                                <td class="align-middle ">
                                    <div class="d-flex align-items-center">
                                        <a class="text-dark" href="@Url.Action("chiTietDuAn", "QuanLyDuAn", new {id = item.ID})" onclick="$('#AjaxLoader').show();">@item.ID_Project</a>
                                    </div>
                                </td>
                                <td class="align-middle ">
                                    <div class="d-flex align-items-center">
                                       <a href="@Url.Action("chiTietDuAn", "QuanLyDuAn", new {id = item.ID})" onclick="$('#AjaxLoader').show();" class="text-dark">@item.Name</a>
                                    </div>
                                </td>
                                <td class="align-middle text-nowrap">
                                    @item.EndDate.ToString("dd/MM/yyyy")
                                </td>
                                <td class="align-middle ">
                                    @item.Debts.Sum(d => d.Price).ToString("0,0").Replace(".", ",") đ
                                </td>
                                <td class="align-middle ">
                                    @item.Tasks.Count() công việc
                                </td>
                                <td class="align-middle ">
                                    <!--Chưa giao việc, còn hạn => đang thực hiện-->
                                    @if (item.Tasks.ToList().Count < 1
                                        && (item.EndDate.AddDays(1) - DateTime.Now).TotalDays >= 0)
                                    {
                                        <div class="d-flex align-items-center">
                                            <div class="me-2"> <span>0%</span></div>
                                            <div class="progress flex-auto" style="height: 6px;">
                                                <div class="progress-bar bg-primary " role="progressbar" style="width: 0%;"
                                                     aria-valuenow="0" aria-valuemin="0" aria-valuemax="100">
                                                </div>
                                            </div>
                                        </div>
                                    }
                                    //Chưa giao việc, quá hạn => đã quá hạnitem.Tasks.ToList().Count > 0
                                    else if (item.Tasks.ToList().Count < 1
                                                            && (item.EndDate.AddDays(1) - DateTime.Now).TotalDays < 0)
                                    {
                                        <div class="d-flex align-items-center">
                                            <div class="me-2"> <span>0%</span></div>
                                            <div class="progress flex-auto" style="height: 6px;">
                                                <div class="progress-bar bg-danger " role="progressbar" style="width: 0%;"
                                                     aria-valuenow="0" aria-valuemin="0" aria-valuemax="100">
                                                </div>
                                            </div>
                                        </div>
                                    }
                                    //Còn hạn và còn việc => đang thực hiện
                                    else if (item.Tasks.ToList().Count > 0
                                        && (item.Tasks.Where(t => t.State.Equals("done")).Sum(t => t.OriginalEstimate) / item.Tasks.Sum(t => t.OriginalEstimate)) * 100 < 100
                                        && (item.EndDate.AddDays(1) - DateTime.Now).TotalDays >= 0)
                                    {
                                        <div class="d-flex align-items-center">
                                            <div class="me-2"><span>@(Convert.ToDecimal((item.Tasks.Where(t => t.State.Equals("done")).Sum(t => t.OriginalEstimate) / item.Tasks.Sum(t => t.OriginalEstimate)) * 100).ToString("0"))%</span></div>
                                            <div class="progress flex-auto" style="height: 6px;">
                                                <div class="progress-bar bg-primary " role="progressbar" style="width: @(Convert.ToDecimal((item.Tasks.Where(t => t.State.Equals("done")).Sum(t => t.OriginalEstimate) / item.Tasks.Sum(t => t.OriginalEstimate)) * 100).ToString("0"))%;"
                                                     aria-valuenow="@(Convert.ToDecimal((item.Tasks.Where(t => t.State.Equals("done")).Sum(t => t.OriginalEstimate) / item.Tasks.Sum(t => t.OriginalEstimate)) * 100).ToString("0"))" aria-valuemin="0" aria-valuemax="100">
                                                </div>
                                            </div>
                                        </div>
                                    }
                                    //Qúa hạn, còn việc hoặc chưa thanh toán xong => đã quá hạn
                                    else if ((item.EndDate.AddDays(1) - DateTime.Now).TotalDays < 0
                                        && (item.Tasks.Where(t => t.State.Equals("done")).Sum(t => t.OriginalEstimate) / item.Tasks.Sum(t => t.OriginalEstimate)) * 100 < 100
                                        || item.Debts.Where(d => d.State == true).ToList().Count < item.Debts.Count)
                                    {
                                        <div class="d-flex align-items-center">
                                            <div class="me-2"><span>@(Convert.ToDecimal((item.Tasks.Where(t => t.State.Equals("done")).Sum(t => t.OriginalEstimate) / item.Tasks.Sum(t => t.OriginalEstimate)) * 100).ToString("0"))%</span></div>
                                            <div class="progress flex-auto" style="height: 6px;">
                                                <div class="progress-bar bg-primary " role="progressbar" style="width: @(Convert.ToDecimal((item.Tasks.Where(t => t.State.Equals("done")).Sum(t => t.OriginalEstimate) / item.Tasks.Sum(t => t.OriginalEstimate)) * 100).ToString("0"))%;"
                                                     aria-valuenow="@(Convert.ToDecimal((item.Tasks.Where(t => t.State.Equals("done")).Sum(t => t.OriginalEstimate) / item.Tasks.Sum(t => t.OriginalEstimate)) * 100).ToString("0"))" aria-valuemin="0" aria-valuemax="100">
                                                </div>
                                            </div>
                                        </div>
                                    }
                                    //hết việc, chưa thanh toán xong => chờ thanh toán
                                    else if ((item.Tasks.Where(t => t.State.Equals("done")).Sum(t => t.OriginalEstimate) / item.Tasks.Sum(t => t.OriginalEstimate)) * 100 >= 100
                                        && item.Debts.Where(d => d.State == true).ToList().Count < item.Debts.Count)
                                    {
                                        <div class="d-flex align-items-center">
                                            <div class="me-2"><span>@(Convert.ToDecimal((item.Tasks.Where(t => t.State.Equals("done")).Sum(t => t.OriginalEstimate) / item.Tasks.Sum(t => t.OriginalEstimate)) * 100).ToString("0"))%</span></div>
                                            <div class="progress flex-auto" style="height: 6px;">
                                                <div class="progress-bar bg-primary " role="progressbar" style="width: @(Convert.ToDecimal((item.Tasks.Where(t => t.State.Equals("done")).Sum(t => t.OriginalEstimate) / item.Tasks.Sum(t => t.OriginalEstimate)) * 100).ToString("0"))%;"
                                                     aria-valuenow="@(Convert.ToDecimal((item.Tasks.Where(t => t.State.Equals("done")).Sum(t => t.OriginalEstimate) / item.Tasks.Sum(t => t.OriginalEstimate)) * 100).ToString("0"))" aria-valuemin="0" aria-valuemax="100">
                                                </div>
                                            </div>
                                        </div>
                                    }
                                    //hết việc, đã thanh toán xong => done
                                    else if ((item.Tasks.Where(t => t.State.Equals("done")).Sum(t => t.OriginalEstimate) / item.Tasks.Sum(t => t.OriginalEstimate)) * 100 == 100
                                        && item.Debts.Where(d => d.State == true).ToList().Count == item.Debts.Count)
                                    {
                                        <div class="d-flex align-items-center">
                                            <div class="me-2"><span>@(Convert.ToDecimal((item.Tasks.Where(t => t.State.Equals("done")).Sum(t => t.OriginalEstimate) / item.Tasks.Sum(t => t.OriginalEstimate)) * 100).ToString("0"))%</span></div>
                                            <div class="progress flex-auto" style="height: 6px;">
                                                <div class="progress-bar bg-primary " role="progressbar" style="width: @(Convert.ToDecimal((item.Tasks.Where(t => t.State.Equals("done")).Sum(t => t.OriginalEstimate) / item.Tasks.Sum(t => t.OriginalEstimate)) * 100).ToString("0"))%;"
                                                     aria-valuenow="@(Convert.ToDecimal((item.Tasks.Where(t => t.State.Equals("done")).Sum(t => t.OriginalEstimate) / item.Tasks.Sum(t => t.OriginalEstimate)) * 100).ToString("0"))" aria-valuemin="0" aria-valuemax="100">
                                                </div>
                                            </div>
                                        </div>
                                    }
                                </td>
                                <td class="align-middle ">
                                    @if (item.Lock == true)
                                    {
                                        <span style="width: 100px" class="badge bg-light-danger text-dark-danger">Đã đóng</span>
                                    }
                                    else
                                    {
                                        //Mới
                                        if (item.StartDate > DateTime.Now)
                                        {
                                            <span style="width: 100px" class="badge bg-gray-100 text-gray-700">Mới</span>
                                        }
                                        //Đang thực hiện
                                        else if (item.Tasks.ToList().Count < 1
                                            && (item.EndDate.AddDays(1) - DateTime.Now).TotalDays >= 0)
                                        {
                                            <span style="width: 100px" class="badge bg-light-primary text-dark-primary">Đang thực hiện</span>
                                        }
                                        //Chưa giao việc, quá hạn => đã quá hạn
                                        else if (item.Tasks.ToList().Count < 1
                                            && (item.EndDate.AddDays(1) - DateTime.Now).TotalDays < 0)
                                        {
                                            <span style="width: 100px" class="badge bg-light-danger text-dark-danger">Đã quá hạn</span>
                                        }
                                        //Còn hạn và còn việc => đang thực hiện
                                        else if (item.Tasks.ToList().Count > 0
                                            && (item.Tasks.Where(t => t.State.Equals("done")).Sum(t => t.OriginalEstimate) < 1 || (item.Tasks.Where(t => t.State.Equals("done")).Sum(t => t.OriginalEstimate) / item.Tasks.Sum(t => t.OriginalEstimate)) * 100 < 100)
                                            && (item.EndDate.AddDays(1) - DateTime.Now).TotalDays >= 0)
                                        {
                                            <span style="width: 100px" class="badge bg-light-primary text-dark-primary">Đang thực hiện</span>
                                        }
                                        //Qúa hạn, còn việc hoặc chưa thanh toán xong => đã quá hạn
                                        else if ((item.EndDate.AddDays(1) - DateTime.Now).TotalDays < 0
                                            && (item.Tasks.Where(t => t.State.Equals("done")).Sum(t => t.OriginalEstimate) / item.Tasks.Sum(t => t.OriginalEstimate)) * 100 < 100)
                                        {
                                            <span style="width: 100px" class="badge bg-light-danger text-dark-danger">Đã quá hạn</span>
                                        }
                                        //hết việc, chưa thanh toán xong => chờ thanh toán
                                        else if ((item.Tasks.Where(t => t.State.Equals("done")).Sum(t => t.OriginalEstimate) / item.Tasks.Sum(t => t.OriginalEstimate)) * 100 >= 100
                                            && item.Debts.Where(d => d.State == true).ToList().Count < item.Debts.Count)
                                        {
                                            <span style="width: 100px" class="badge bg-light-warning text-dark-warning">Chờ thanh toán</span>
                                        }
                                        //hết việc, đã thanh toán xong => done
                                        else if ((item.Tasks.Where(t => t.State.Equals("done")).Sum(t => t.OriginalEstimate) / item.Tasks.Sum(t => t.OriginalEstimate)) * 100 == 100
                                            && item.Debts.Where(d => d.State == true).ToList().Count == item.Debts.Count)
                                        {
                                            <span style="width: 100px" class="badge bg-light-success text-dark-success">Hoàn thành</span>
                                        }
                                    }

                                </td>
                            </tr>
                        }

                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>


